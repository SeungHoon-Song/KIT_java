package p7;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import p5.Student;

public class GroupingByEx {

	public static void main(String[] args) {
		List<Student> totalList = Arrays.asList(
				new Student("홍길동",10,Student.Sex.MALE,Student.City.Pusan),
				new Student("김수애",6,Student.Sex.FEMALE,Student.City.Seoul),
				new Student("신용권",10,Student.Sex.MALE,Student.City.Pusan),
				new Student("박수미",6,Student.Sex.FEMALE,Student.City.Seoul),
				new Student("박수호",6,Student.Sex.MALE,Student.City.Seoul)
				);
		Stream<Student> totalStream = totalList.stream();
		
		//Student객체가 입력되어서 Student.City가 리턴됨
		Function<Student, Student.City> classisfier = Student::getCity;
		
		//Student객체가 입력되어서 Student의 name이 리턴됨
		Function<Student, String> mapper = Student::getName;
	
		//이름을 List에 수집하는 colector를 얻는다
		Collector<String,?,List<String>> collector1 = Collectors .toList();
		
		//Collector의 mapping()메소드로 Student 이름을 List에 수집하는 collector를 얻는다.
		Collector<Student,?,List<String>> collector2 = Collectors.mapping(mapper, collector1);
		
		//Student.City가 키 그룹핑된 이름 List가 값이 Map을 생성하는 Collector를 얻는다
		Collector<Student,?,Map<Student.City,List<String>>> collector3=
				Collectors.groupingBy(classisfier,collector2);
		
		Map<Student.City,List<String>> mapByCity = totalStream.collect(collector3);
		System.out.println(mapByCity.get(Student.City.Seoul));
	}

}
